version: '3.7'

services:
  # application:
  #   build: .
  #   container_name: application
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production
  #     - TYPEORM_HOST=host.docker.internal
  #     - CAMDIGKEY_URL=http://auth-camdigkey:3020
  #     - API_PORT=3000
  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #   command: ["node", "dist/main"]

  db:
    container_name: db
    image: postgres:12.3-alpine
    environment:
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_DB=${TYPEORM_DATABASE}
      - PG_DATA=/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - ${TYPEORM_PORT}:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
  
  auth-camdigkey:
    image: docker.dev.digitaleconomy.gov.kh/camdigikey-auth:release-1.0.0
    container_name: auth-camdigkey
    ports:
      - "3001:3020"
    env_file:
      - .env.camdigkey
    volumes:
      - ./keystore:/usr/src/app/build/src/keystore
    networks:
      - app-network
      
  fileStorage:
    image: minio/minio
    container_name: fileStorage
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: root12345
    volumes:
      - ./min-data:/data
    command: server /data --console-address ":9090"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

volumes:
  pgdata:
  redis_data:

networks:
  app-network:
    driver: bridge